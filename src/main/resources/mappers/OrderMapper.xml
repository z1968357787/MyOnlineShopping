<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxxx.crm.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.xxxx.crm.vo.Order">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <id column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="subtotal" jdbcType="DOUBLE" property="subtotal" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, product_id, product_name, price, quantity, subtotal
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.xxxx.crm.vo.OrderKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_order
    where user_id = #{userId,jdbcType=INTEGER}
      and product_id = #{productId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.xxxx.crm.vo.OrderKey">
    delete from t_order
    where user_id = #{userId,jdbcType=INTEGER}
      and product_id = #{productId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xxxx.crm.vo.Order">
    insert into t_order (user_id, product_id, product_name, 
      price, quantity, subtotal
      )
    values (#{userId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{quantity,jdbcType=INTEGER}, #{subtotal,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xxxx.crm.vo.Order">
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="subtotal != null">
        subtotal,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="subtotal != null">
        #{subtotal,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxxx.crm.vo.Order">
    update t_order
    <set>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="subtotal != null">
        subtotal = #{subtotal,jdbcType=DOUBLE},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
      and product_id = #{productId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxxx.crm.vo.Order">
    update t_order
    set product_name = #{productName,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      quantity = #{quantity,jdbcType=INTEGER},
      subtotal = #{subtotal,jdbcType=DOUBLE}
    where user_id = #{userId,jdbcType=INTEGER}
      and product_id = #{productId,jdbcType=INTEGER}
  </update>

  <insert id="insertBatch" parameterType="list">
    insert into t_order (user_id,product_id,product_name,price,quantity,subtotal)
    VALUES
    <foreach collection="list" item="com.xxxx.crm.vo.Order" separator=",">
      (#{com.xxxx.crm.vo.Order.userId},
      #{com.xxxx.crm.vo.Order.productId},
      #{com.xxxx.crm.vo.Order.productName},
      #{com.xxxx.crm.vo.Order.price},
      #{com.xxxx.crm.vo.Order.quantity},
      #{com.xxxx.crm.vo.Order.subtotal})
    </foreach>
  </insert>

  <select id="selectByParams" parameterType="com.xxxx.crm.query.OrderQuery" resultType="com.xxxx.crm.vo.Order">
    select <include refid="Base_Column_List" /> from t_order
    <where>
        user_id=#{userId}
      <if test="productName!=null and productName !=''">
        and product_name like concat ('%',#{productName},'%')
      </if>
    </where>
  </select>

  <delete id="deleteBatch" parameterType="list">
    delete from t_order where
    <foreach collection="list" item="com.xxxx.crm.vo.OrderKey" separator="or">
      (user_id=#{com.xxxx.crm.vo.OrderKey.userId,jdbcType=INTEGER} and
      product_id=#{com.xxxx.crm.vo.OrderKey.productId,jdbcType=INTEGER})
    </foreach>
  </delete>

</mapper>